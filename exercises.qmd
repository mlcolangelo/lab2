---
title: "exercieses"
format: html
---

library(dplyr)

```{r}
install.packages("dplyr")
```

```{r}
library(dplyr)
```

```{r}
#1
glimpse(tree_dat)
```

\[1\] 131386

```{r}
#2
tree_dat %>%
  filter(standID == 1) %>%
  tally()
```

\[2\] 979

```{r}
#3
tree_dat %>%
  filter(species %in% c("ABBA","PIST")) %>%
  count(species)
```

\[3\] 17221

```{r}
#4
last_year <- max(tree_dat$year, na.rm = TRUE)

tree_dat %>%
  filter(year == last_year, age > 200) %>%
  tally()
```

\[4\] 7

```{r}
#5
tree_dat%>%
  slice_max(order_by = age, n = 1)

  oldest_tree <- tree_dat %>%
    slice_max(order_by = age, n = 5) 
```

\[5\] Tree 24

```{r}
#Question 6: Find the oldest 5 trees recorded in 2001. Use the help docs to understand optional parameters
oldest_trees_2001 <- tree_dat %>%
  filter(year == 2001) %>%
  arrange(desc(age)) %>%
  head(5)
print(oldest_trees_2001)

```

\[6\] Trees 24, 25, 1595, 1598, and 1712

```{r}
#Question 7: Using slice_sample, how many trees are in a 30% sample of those recorded in 2002?

trees_2002 <- tree_dat %>%
  filter(year == 2002)
sample_size <- ceiling(nrow(trees_2002) * 0.30)

sampled_trees <- trees_2002 %>%
  slice_sample(n = sample_size)

cat("Number of trees in the 30% sample:", nrow(sampled_trees), "\n")
```

\[7\] 688 trees

```{r}
#Question 8: Filter all trees in stand 5 in 2007. Sort this subset by descending radius at breast height (rad_ib) and use slice_head() to get the top three trees. Report the tree IDs

stand5_trees_2007 <- tree_dat %>%
  filter(standID == 5, year == 2007) %>%
  arrange(desc(rad_ib)) %>%
  slice_head(n = 3)

cat("Top 3 tree IDs based on rad_ib:\n", stand5_trees_2007$treeID, "\n")

```

\[8\] 128, 157, 135

```{r}
#Question 9: Reduce your full data.frame to [treeID, stand, year, and radius at breast height]. Filter to only those in stand 3 with records from 2007, and use slice_min to pull the smallest three trees meaured that year.

smallest_trees_2007 <- tree_dat %>%
  select(treeID, standID, year, rad_ib) %>%
  filter(standID == 3, year == 2007) %>%
  slice_min(order_by = rad_ib, n = 3)
print(smallest_trees_2007)

```
\[9\] Trees 50, 56, and 36

```{r}
#Question 10: Use select to remove the stand column. Use glimspe to show the dataset.

tree_dat_reduced <- tree_dat %>%
  select(-stand)
glimpse(tree_dat_reduced)

```
\[10\] See above tibble.

```{r}
#Question 11: Look at the help document for dplyr::select and examine the “Overview of selection features”. Identify an option (there are multiple) that would help select all columns with the string “ID” in the name. Using glimpse to view the remaining dataset

id_columns <- tree_dat %>%
  select(contains("ID"))

glimpse(id_columns)

```
\[11\] See above tibble.

```{r}
#Question 12: Find a selection pattern that captures all columns with either ‘ID’ or ‘stand’ in the name. Use glimpse to verify the selection.

selected_columns <- tree_dat %>%
  select(matches("ID|stand"))

glimpse(selected_columns)

```
\[12\] See above tibble.

```{r}
#Question 13: Looking back at the data dictionary, rename rad_inc and inc to include _[unit] in the name. Unlike earlier options, be sure that this renaming is permanent, and stays with your data.frame (e.g. <-). Use glimpse to view your new data.frame.

tree_dat <- tree_dat %>%
  rename(
    inc_cm = inc,
    rad_ib_mm = rad_ib
  )

glimpse(tree_dat)
```

\[13\] See above.

```{r}
#Question 14: A key measurement in forestry in “basal area column”. The metric is computed with the formula: 
#BA(m2) = 0.00007854⋅DBH^2
#Where DBH is the diameter at breast height (cm). Use mutate to compute DBH in centimeters, and BA in m2 (HINT: Make sure rad_ib is in cm prior to computing the diameter!). What is the mean BA_m2 of the the species POTR in 2007?

tree_dat <- tree_dat %>%
  mutate(
    rad_ib_cm = rad_ib_mm / 10,
    DBH_cm = rad_ib_cm * 2,
    BA_m2 = 0.00007854 * (DBH_cm^2)
  )

mean_BA_POTR_2007 <- tree_dat %>%
  filter(species == "POTR", year == 2007) %>%
  summarise(mean_BA_m2 = mean(BA_m2, na.rm = TRUE))

print(mean_BA_POTR_2007)

```
\[14\] The mean basal area is roughly 0.037 meters squared.

```{r}
#Question 15: Lets say for the sake of our study, trees are not established until they are 5 years of age. Use if_else to add a boolean column to our dataset called established that is TRUE if the age is greater then 5 and FALSE if less then or equal to five. Once added, use count (see ?count) to determine how many records are from estabilshed trees?

tree_dat <- tree_dat %>%
  mutate(established = if_else(age > 5, TRUE, FALSE))

established_count <- tree_dat %>%
  count(established)

print(established_count)

```
\[15\] 122503 records are from established trees.

```{r}
#Question 16: Use mutate and case_when to add a new column to you data.frame that classifies each tree into the proper DBH_class. Once done, limit your dataset to the year 2007 and report the number of each class with count.

tree_dat <- tree_dat %>%
  mutate(
    DBH_class = case_when(
      DBH_cm < 10  ~ "Small",
      DBH_cm >= 10 & DBH_cm < 30  ~ "Medium",
      DBH_cm >= 30 ~ "Large",
      TRUE ~ NA_character_ 
    )
  )

dbh_class_count_2007 <- tree_dat %>%
  filter(year == 2007) %>%
  count(DBH_class)

print(dbh_class_count_2007)


```
\[16\] There are 252 small, 1963 medium, and 76 large.

```{r}
#Question 17: Compute the mean DBH (in cm) and standard deviation of DBH (in cm) for all trees in 2007. Explain the values you found and their statistical meaning.

dbh_stats_2007 <- tree_dat %>%
  filter(year == 2007) %>%
  summarise(
    mean_DBH_cm = mean(DBH_cm, na.rm = TRUE),
    sd_DBH_cm = sd(DBH_cm, na.rm = TRUE)
  )

print(dbh_stats_2007)

```
\[17\] The average diameter at breast height of a tree in 2007 is roughly 16.1 cm. This varies by an average of roughly 6.12 cm.

```{r}
# Question 18: Compute the per species mean tree age using only those ages recorded in 2003. Identify the three species with the oldest mean age.

mean_age_2003 <- tree_dat %>%
  filter(year == 2003) %>%
  group_by(species) %>%
  summarise(mean_age = mean(age, na.rm = TRUE)) %>%
  arrange(desc(mean_age)) %>%
  slice_head(n = 3)

print(mean_age_2003)

```

\[18\] See above tibble.

```{r}
#Question 19: In a single summarize call, find the number of unique years with records in the data set along with the first and last year recorded?

year_summary <- tree_dat %>%
  summarise(
    unique_years = n_distinct(year),
    first_year = min(year, na.rm = TRUE),
    last_year = max(year, na.rm = TRUE)
  )

print(year_summary)

```
\[19\] See above tibble.

```{r}
#Question 20: Determine the stands with the largest number of unique years recorded. Report all stands with largest (or tied with the largest) temporal record.

stand_years <- tree_dat %>%
  group_by(stand) %>%
  summarise(unique_years = n_distinct(year)) %>%
  ungroup()

max_unique_years <- max(stand_years$unique_years, na.rm = TRUE)

stands_with_largest_records <- stand_years %>%
  filter(unique_years == max_unique_years)

print(stands_with_largest_records)

```
\[20\] See tibble.

```{r}

growth_rates <- tree_dat %>%
  arrange(species, year) %>%
  group_by(species, treeID) %>%
  mutate(annual_growth = DBH_cm - lag(DBH_cm)) %>%
  summarise(total_growth = sum(annual_growth, na.rm = TRUE),
            growth_years = n()) %>%
  filter(growth_years >= 10) %>% 
  group_by(species) %>%
  summarise(avg_growth = mean(total_growth / growth_years, na.rm = TRUE),
            sd_growth = sd(total_growth / growth_years, na.rm = TRUE)) %>%
  arrange(desc(avg_growth))

fastest_growth <- growth_rates %>% slice_head(n = 3)
slowest_growth <- growth_rates %>% slice_tail(n = 3)

print("Fastest Growing Species:")
print(fastest_growth)

print("Slowest Growing Species:")
print(slowest_growth)

```

